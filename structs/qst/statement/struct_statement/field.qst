use std::ascii::{
  WhiteSpace,
  SkipWhiteSpace,
  LeftParenthesis,
  RightParenthesis,
  Colon,
  Star,
  Comma,
  Assign,
  Integer,
}

use crate::{
  identifier::Identifier,
  expression::{
    Expression,
  },
}

pub struct Fields with SkipWhiteSpace {
  Identifier (in Identifier),
  LeftParenthesis (in LeftParenthesis),
  Expression (in Expression),
  RightParenhesis (in RightParenhesis),
  ColonOrStar (in ColonOrStar),
}

enum ColonOrStar (..) {
  ColonAndExpression (in ColonAndExpression),
  StarOrComma (in StarOrComma),
}

struct ColonAndExpression with SkipWhiteSpace {
  Colon (in Colon),
  Expression (in Expression),
  StarOrComma (in StarOrComma),
}

enum StarOrComma (..) {
  StarAndExpression (in StarAndExpression),
  AssignOrComma (in AssignOrComma),
}

struct StarAndExpression with SkipWhiteSpace {
  Star (in Star),
  Expression (in Expression),
  AssignOrComma (in AssignOrComma),
}

enum AssignOrComma (..) {
  AssignAndInteger (in AssignOrInteger),
  CommaOrTrailing (in CommaOrTrailing),
}

struct AssignAndInteger with SkipWhiteSpace {
  Assign (in Assign),
  Integer (in Integer),
  CommaOrTrailing (in CommaOrTrailing),
}

enum CommaOrTrailing (..) {
  CommaAndField (in CommaAndField),
  TrailingComma (in Comma),
}

struct CommaAndField with SkipWhiteSpace {
  Comma (in Comma),
  Fields (in Fields),
}